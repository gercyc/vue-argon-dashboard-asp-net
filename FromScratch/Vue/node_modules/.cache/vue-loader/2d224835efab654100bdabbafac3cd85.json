{"remainingRequest":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\src\\components\\BaseDropdown.vue?vue&type=style&index=0&id=7445dd9c&lang=css&","dependencies":[{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\src\\components\\BaseDropdown.vue","mtime":1660607455840},{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660609851957},{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660609852193},{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1660609849391},{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660609835532},{"path":"C:\\source_gercy\\gercyc\\vue-argon-dashboard-asp-net\\FromScratch\\Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1660609852193}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5kcm9wZG93biB7DQogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCn0NCg0KLmRyb3Bkb3duIC5kcm9wZG93bi10b2dnbGUgew0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQo="},{"version":3,"sources":["BaseDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;;AAEA;AACA;AACA","file":"BaseDropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <component class=\"dropdown\"\r\n               :is=\"tag\"\r\n               :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\r\n               aria-haspopup=\"true\"\r\n               :aria-expanded=\"isOpen\"\r\n               @click=\"toggleDropDown\"\r\n               v-click-outside=\"closeDropDown\">\r\n\r\n        <slot name=\"title\">\r\n            <a class=\"dropdown-toggle nav-link\"\r\n               :class=\"{'no-caret': hideArrow}\"\r\n               data-toggle=\"dropdown\">\r\n                <i :class=\"icon\"></i>\r\n                <span class=\"no-icon\">{{title}}</span>\r\n            </a>\r\n        </slot>\r\n        <ul class=\"dropdown-menu\"\r\n            ref=\"menu\"\r\n            :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}, menuClasses]\">\r\n            <slot></slot>\r\n        </ul>\r\n    </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"base-dropdown\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\"\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: \"Dropdown title\"\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: \"Icon for dropdown title\"\r\n    },\r\n    position: {\r\n      type: String,\r\n      description: \"Position of dropdown menu (e.g right|left)\"\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: \"Dropdown menu classes\"\r\n    },\r\n    hideArrow: {\r\n      type: Boolean,\r\n      description: \"Whether dropdown arrow should be hidden\"\r\n    },\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: true,\r\n      description: \"Whether dropdown should be appended to document body\"\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: \"li\",\r\n      description: \"Dropdown html tag (e.g div, li etc)\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit(\"change\", this.isOpen);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.dropdown {\r\n  list-style-type: none;\r\n}\r\n\r\n.dropdown .dropdown-toggle {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}